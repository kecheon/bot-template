version: '3.3'

networks:
  traefik-public:
    external: true

services:
  freqtrade:
        image: kecheon/freqtrade-bitsbee:api-auth
        restart: unless-stopped
        # cannot use variable to the service name
        # hostname not works
        # so that set container_name to access this container name as it's hostname
        environment:
            - BOT_CONFIG_API=https://api.bitsbee.io
        networks:
            - traefik-public
        volumes:
            - "./user_data:/freqtrade/user_data"
        # Default command used when running `docker compose up`
        command: >
            trade
            --db-url sqlite:////freqtrade/user_data/data.sqlite
            --config /freqtrade/user_data/config.json
            --config /freqtrade/user_data/config_custom.json
        deploy:
          replicas: 1
          placement:
              constraints:
                  - node.hostname == bots001
          restart_policy:
            condition: on-failure
            delay: 5s
          labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.${BOT_ID}-http.rule=Host(`${BOT_ID}.bots.bitsbee.io`)
                - traefik.http.routers.${BOT_ID}-http.entrypoints=http
                - traefik.http.routers.${BOT_ID}-http.middlewares=https-redirect
                - traefik.http.routers.${BOT_ID}-https.rule=Host(`${BOT_ID}.bots.bitsbee.io`)
                - traefik.http.routers.${BOT_ID}-https.entrypoints=https
                - traefik.http.routers.${BOT_ID}-https.tls=true
                - traefik.http.routers.${BOT_ID}-https.tls.certresolver=le
                - traefik.http.services.${BOT_ID}.loadbalancer.server.port=8080
